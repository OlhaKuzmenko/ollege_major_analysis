submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/telegram.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/telegram.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/telegram.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/telegram.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/telegram.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/telegram.R")
submit()
telegram("Good", "morning")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/mad_libs.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/bin_op.R")
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/bin_op.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/bin_op.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/bin_op.R")
submit()
source("C:/Users/ytrewq/AppData/Local/Temp/RtmpQZnifb/bin_op.R")
submit()
'I'"%p%" 'love' "%p%" 'R!'
"I"'"%p% "love" %p% "R!"
"I"'"%p% "love" %p% "R!"
"I" %p% "love" %p% "R!"
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
swirl()
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1 <- weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
source("~/pollutantmean.R")
pollutantmean("C/users/ytrewq/Documents/specdata/", "sulfate")
pollutantmean("Home/specdata/", "sulfate")
library(readxl)
LungCapData <- read_excel("LungCapData.xlsx")
View(LungCapData)
source("~/pollutantmean.R")
pollutant("C/users/ytrewq/Documents/specdata/", "sulfate")
source("~/pollutantmean.R")
pollutant("C/users/ytrewq/Documents/specdata/", "sulfate")
pollutantmean("C/users/ytrewq/Documents/specdata/", "sulfate")
source("~/pollutantmean.R")
source("~/pollutantmean.R")
pollutantmean("C/users/ytrewq/Documents/specdata/", "sulfate")
source("~/pollutantmean.R")
pollutantmean("C/users/ytrewq/Documents/specdata/", "sulfate")
source("~/pollutantmean.R")
pollutantmean("C/users/ytrewq/Documents/specdata/", "sulfate")
getwd()
pollutantmean("C:/users/ytrewq/Documents/specdata/", "sulfate")
source("~/pollutantmean.R")
source("~/pollutantmean.R")
source("~/pollutantmean.R")
source("~/pollutantmean.R")
pollutantmean("C:/users/ytrewq/Documents/specdata/", "nitrate")
pollutantmean("C:/users/ytrewq/Documents/specdata/", "nitrate")
source("~/pollutantmean.R")
source("~/pollutantmean.R")
source("~/complete.R")
complete(mydata, 1)
source("~/complete.R")
complete(mydata, 1)
source("~/complete.R")
complete(mydata, 1)
source("~/complete.R")
complete("C:/users/ytrewq/Documents/specdata/", 1)
source("~/complete.R")
source("~/complete.R")
source("~/complete.R")
source("~/corr.R")
corr("C:/users/ytrewq/Documents/specdata/")
cr <- corr("C:/users/ytrewq/Documents/specdata/", 150)
head(cr)
head(cr)
summary(cr)
source("~/pollutantmean.R")
pollutantmean("C:/users/ytrewq/Documents/specdata/", "sulfate", 1:10)
pollutantmean("C:/users/ytrewq/Documents/specdata/", "nitrate", 70:72)
pollutantmean("C:/users/ytrewq/Documents/specdata/", "sulfate", 34)
pollutantmean("C:/users/ytrewq/Documents/specdata/", "nitrate")
source("~/complete.R")
cc <- complete("C:/users/ytrewq/Documents/specdata/", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("C:/users/ytrewq/Documents/specdata/", c(6, 10, 20, 34, 100, 200, 310))
source("~/complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
source("~/complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
source("~/complete.R")
print(cc$nobs)
cc <- complete("C:/users/ytrewq/Documents/specdata/", 54)
print(cc$nobs)
RNGversion("3.5.1")
set.seed(42)
cc <- complete("C:/users/ytrewq/Documents/specdata/", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source("~/corr.R")
cr <- corr("C:/users/ytrewq/Documents/specdata/")
cr <- sort(cr)
RNGversion("3.5.1")
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
RNGversion("3.5.1")
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flag_colors <- flags[, 11:17]
flag_colors <- flags[, 11:17]
head(flag_colors)
sum(flag_colors$red)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean/sum)
lapply(flag_colors, mean)lapply(flag_colors, sum)
lapply(flag_colors, mean)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
sapply(flag_shapes, range)
lapply(flag_shapes, range)
shape_mat <- lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
sapply(unique_vals, length)
sapply(unique_vals, unique)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
swirl()
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head("Temp_Min_F")
head(plants)
head(plants[1:10])
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE, prob = 0.00077)
sample(1:6, 4, replace = TRUE, 0.00077)
sample(1:6, 4, replace = TRUE, c(0.00077))
sample(1:6, 4, replace = TRUE, rep(0.00077, 4))
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
sample(LETTERS, 26)
sample(LETTERS, 26, replace = TRUE)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample.int(c(0,1), 100, replace = FALSE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = FALSE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(c(0, 1), size = 100, prob = 0.7)
flips2 <- rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- replicate(5, rpois(5, colMeans(my_pois)))
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(speed ~ dist, cars)
plot(x = cars$dist, y = cars$speed)
plot(x = Speed, y = cars$speed)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
?plot
plot(cars, sub("My Plot Subtitle"))
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
xlim = c(10, 15)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5, 2)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character",header=TRUE)
outcome[, 11] <- as.numeric(outcome[, 11],na.rm=TRUE)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character",header=TRUE)
outcome[, 11] <- as.numeric(outcome[, 11],na.rm=TRUE)
hist(outcome[, 11],xlab= "Deaths", main = "Hospital 30-Day Death (Mortality) Rates from Heart Attack")
source("~/best.R")
source("~/best.R")
best("TX", "heart attack")
best("TX", "heart failure")
source("~/best.R")
library(swirl)
install_from_swirl("Regression Models")
swirl()
cor(gpa_nor, gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor, data)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
m <- mean(x)
m
g <- sum(w*(x-m)^2)
g
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mid <- lm(y~x)
summary(mid)
data(mtcars)
moc <- lm(mpg~weight)
moc <- lm(mpg~weight, data(mtcars))
moc <- lm(mtcars$mpg ~ mtcars$wt)
summary(moc)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
mik <- lm(y ~ x)
summary(mik)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
s<- sum((x-mean(x))^2)
s
mean(x)
swirl()
swirl()
fit<-lm(child ~ parent, data = galton)
sqrt(sum(fit$residuals^2))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
deviance(fit)/(n-2)
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum((galton$child-mu)^2)
sRes<-sum(residuals^2)
sRes<-sum((galton$child-lm(galton$child ~ galton$parent))^2)
sRes<-sum((galton$child-fit)^2)
sRes<-sum((galton$child-predict(fit))^2)
sRes <- deviance(fit)
r^2<-sRes/sTot
sRes/sTot
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child,galton$parent))^2
(cor(galton$child,galton$parent)^2
(cor(galton$child,galton$parent))^2
cor(galton$child,galton$parent)
cor(galton$parent,galton$child)^2
ones <- rep(1, nrow(galton))
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ parent,
| galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality, swiss)
all<-lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality, swiss)
summary(all)
summary(lm(Fertility ~ agriculture, swiss))
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination, Education)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms(Agriculture)
makelms(swiss$Agriculture)
makelms(Fertility ~ Agriculture)
makelms(cor(swiss$Agriculture, swiss$Education))
makelms()
ec<-sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination+swiss$Catholic
lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality + ec, swiss)
efit <- lm(Fertility ~ . + ec, swiss)
coef(all)
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
m<-lm(y~x)
summary(m)
q<-lm(mpg~weight, mtcars)
data(mtcars)
q<-lm(mpg~weight, mtcars)
q<-lm(mtcars$mpg ~ mtcars$wt)
summary(q)
sumCoef[1,1]+c(-1,1)*qt(.95, df=mtcars$mpg)*sumCoef[1,2]
q[1,1]+c(-1,1)*qt(.95, df=mtcars$mpg)*q[1,2]
carslm<-lm(mpg~wt, data=mtcars)
meanvalue = data.frame(wt=mean(mtcars$wt))
predict(carslm, meanvalue, interval="confidence")
?mtcars
swirl()
library(swirl)
swirl()
fit<-lm(y~x, out2)
plot(fit, which=1)
fit<-lm(y~x, out2[-1, ])
fitno <- lm(y ~ x, out2[-1, ])
plot(fitno, which=1)
coef(fitno)-coef(fit)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma<-residuals(fit)/deviance(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd<-sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit,which=2)
sigma1<-sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/sqrt(1-hatvalues(fit)[1])
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
View(rstudent(fit))
dy<-predict(fitno, out2)-predict(fit, out2)
sum(sqrt(dy))/2*sigma^2
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
database(mtcars)
data("mtcars")
force(mtcars)
force(mtcars)
names(mtcars)
q<-lm(mpg ~ cyl + wt, mtcars)
summary(q)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<- lm(y~x)
summary(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit2<-lm(y ~ x)
dfbeta(fit)$hat
influence.measures(fit)
install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college)4
data(college)
devtools::install_github("jhudsl/matahari")
dance_start(value = FALSE, contents = FALSE)
dance_save("~/Desktop/college_major_analysis.rds")
dance_start(value = FALSE, contents = FALSE)
library(matahari)
dance_start(value = FALSE, contents = FALSE)
dance_save("~/Desktop/college_major_analysis.rds")
dance_save("C:/Users/ytrewq/Documents/Desktop/college_major_analysis.rds")
dance_start(value = FALSE, contents = FALSE)
dance_save("~/Desktop/college_major_analysis.rds")
dance_save("C:/Users/ytrewq/Documents/Desktop/college_major_analysis.rds")
dance_save("/Desktop/college_major_analysis.rds")
dance_save("Desktop/college_major_analysis.rds")
rank: Rank by median earnings
major_code: Major code
major: Major description
major_category: Category of major
dance_save("~/Desktop/college_major_analysis.rds")
q<-lm(total ~ major_category)
